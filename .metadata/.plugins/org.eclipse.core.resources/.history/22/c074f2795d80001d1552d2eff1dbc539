package com.ravi.test.configuration;

import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;
import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;
import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;
import org.springframework.batch.item.file.FlatFileItemReader;
import org.springframework.batch.item.file.builder.FlatFileItemReaderBuilder;
import org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.ClassPathResource;

import com.ravi.test.domain.Employee;

@Configuration
@EnableBatchProcessing
public class BatchConfiguration {

	 @Autowired
	    public JobBuilderFactory jobBuilderFactory;

	    @Autowired
	    public StepBuilderFactory stepBuilderFactory;
	    
	    @Value("${file.input}")
	    private String fileInput;
	    
	    
	    @Bean
	    public FlatFileItemReader<Employee> reader() {
	        return new FlatFileItemReaderBuilder().name("coffeeItemReader")
	          .resource(new ClassPathResource(fileInput))
	          .delimited()
	          .names(new String[] { "brand", "origin", "characteristics" })
	          .fieldSetMapper(new BeanWrapperFieldSetMapper() {{
	              setTargetType(Employee.class);
	          }})
	          .build();
	    }
	    
	    
}
